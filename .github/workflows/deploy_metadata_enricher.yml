name: Deploy → projectMetadataEnricher (ALL projects)

on:
  push:
    paths:
      - lambdas/project_metadata_enricher.py
      - .github/workflows/deploy_metadata_enricher.yml

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    env:
      REGION:           ${{ secrets.AWS_REGION || 'us-east-2' }}
      FUNCTION_NAME:    projectMetadataEnricher
      ZIP_FILE:         project_metadata_enricher.zip
      TABLE_NAME:       ${{ secrets.DYNAMODB_ENRICHMENT_TABLE }}
      TEST_PID:         ${{ secrets.TEST_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.REGION }}

      - name: who-am-I
        run: aws sts get-caller-identity

      - name: Zip Lambda
        run: zip -j $ZIP_FILE lambdas/project_metadata_enricher.py

      - name: Update code
        run: |
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --zip-file fileb://$ZIP_FILE

      - name: Count BEFORE
        id: pre
        run: |
          before=$(aws dynamodb query \
            --table-name $TABLE_NAME \
            --key-condition-expression 'project_id = :p' \
            --expression-attribute-values '{":p":{"S":"'"$TEST_PID"'"}}' \
            --query 'Count' --output text)
          echo "before=$before" >> "$GITHUB_OUTPUT"

      - name: Invoke enrichment
        run: aws lambda invoke --function-name $FUNCTION_NAME --payload '{}' out.json --cli-binary-format raw-in-base64-out

      - name: Count AFTER
        id: post
        run: |
          after=$(aws dynamodb query \
            --table-name $TABLE_NAME \
            --key-condition-expression 'project_id = :p' \
            --expression-attribute-values '{":p":{"S":"'"$TEST_PID"'"}}' \
            --query 'Count' --output text)
          echo "after=$after" >> "$GITHUB_OUTPUT"

      - name: Assert table not empty
        run: |
          before=${{ steps.pre.outputs.before }}
          after=${{ steps.post.outputs.after }}
          echo "Rows before: $before • after: $after"
          if [ "$after" -eq 0 ]; then
            echo "::error ::No rows for test PID"; exit 1; fi
