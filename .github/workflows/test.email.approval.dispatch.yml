name: Test Dispatch Approval Email

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'Project ID (acta_id)'
        required: true
      override_email:
        description: 'Optional override recipient e-mail'
        required: false

jobs:
  dispatch:
    runs-on: ubuntu-latest
    env:
      TABLE: ${{ secrets.DYNAMODB_ENRICHMENT_TABLE }}  # your v2 table
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Lookup latest card_id + pdf_key
        id: lookup
        run: |
          PID="${{ github.event.inputs.project_id }}"
          echo "üîé Looking up project $PID"
          RESP=$(aws dynamodb query \
            --table-name "$TABLE" \
            --key-condition-expression "project_id = :pid" \
            --expression-attribute-values '{"":":pid":{"S":"'"$PID"'"}}' \
            --projection-expression "card_id, s3_pdf_path" \
            --limit 1)
          CARD_ID=$(echo "$RESP"   | jq -r '.Items[0].card_id.S')
          PDF_KEY=$(echo "$RESP"   | jq -r '.Items[0].s3_pdf_path.S')
          echo "card_id=$CARD_ID"   >> $GITHUB_OUTPUT
          echo "pdf_key=$PDF_KEY"   >> $GITHUB_OUTPUT

      - name: Resolve recipient
        id: recipient
        run: |
          if [[ -n "${{ github.event.inputs.override_email }}" ]]; then
            RECIP="${{ github.event.inputs.override_email }}"
          else
            GET=$(aws dynamodb get-item \
              --table-name "$TABLE" \
              --key "{\"project_id\":{\"S\":\"${{ github.event.inputs.project_id }}\"},\"card_id\":{\"S\":\"${{ steps.lookup.outputs.card_id }}\"}}" \
              --projection-expression "client_email")
            RECIP=$(echo "$GET" | jq -r '.Item.client_email.S')
          fi
          echo "recipient=$RECIP" >> $GITHUB_OUTPUT

      - name: Invoke sendApprovalEmail
        run: |
          PAYLOAD=$(jq -n \
            --arg pid "${{ github.event.inputs.project_id }}" \
            --arg cid "${{ steps.lookup.outputs.card_id }}" \
            --arg rec "${{ steps.recipient.outputs.recipient }}" \
            --arg key "${{ steps.lookup.outputs.pdf_key }}" \
            '{project_id: $pid, card_id: $cid, recipient: $rec, pdf_key: $key}')
          echo "‚è≥ Invoking Lambda with payload:"
          echo "$PAYLOAD"
          aws lambda invoke \
            --function-name sendApprovalEmail \
            --cli-binary-format raw-in-base64-out \
            --payload "$PAYLOAD" \
            response.json
          cat response.json
