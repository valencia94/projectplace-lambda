name: Convert Latest Docx to PDF

on:
  workflow_dispatch: {}  # Allows you to manually trigger the workflow

jobs:
  convert-latest-docx:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Source
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2  # or your region

      - name: 🏗 Install LibreOffice
        run: |
          sudo apt-get update
          sudo apt-get install -y libreoffice

      - name: 🔎 Find the latest docx in S3
        id: find_latest
        run: |
          # We'll pick the newest .docx by LastModified under s3://projectplace-dv-2025-x9a7b/actas
          LATEST_DOC=$(aws s3api list-objects-v2 \
            --bucket projectplace-dv-2025-x9a7b \
            --prefix "actas/" \
            --query "reverse(sort_by(Contents, &LastModified))[0].Key" \
            --output text)

          if [ "$LATEST_DOC" = "None" ] || [ -z "$LATEST_DOC" ]; then
            echo "No docx found in actas/ prefix!"
            exit 1
          fi

          echo "LATEST_DOC=$LATEST_DOC"
          # Expose as an output so we can reference it in later steps
          echo "LATEST_DOC=$LATEST_DOC" >> $GITHUB_OUTPUT

      - name: 📂 Download the newly created docx
        run: |
          DOCX_NAME=${{ steps.find_latest.outputs.LATEST_DOC }}
          echo "Downloading s3://projectplace-dv-2025-x9a7b/$DOCX_NAME"
          
          # Force a local filename for clarity
          LOCAL_DOCX=$(basename "$DOCX_NAME")
          aws s3 cp "s3://projectplace-dv-2025-x9a7b/$DOCX_NAME" "$LOCAL_DOCX"

          echo "Verifying it downloaded..."
          ls -l

      - name: 🖨 Convert docx to pdf
        run: |
          # We'll assume there's exactly one .docx in this folder now
          DOCX_FILE=$(ls *.docx)
          echo "Converting $DOCX_FILE to PDF..."
          libreoffice --headless --convert-to pdf "$DOCX_FILE"
          ls -l

      - name: 🚀 Upload PDF back to S3
        run: |
          PDF_FILE=$(ls *.pdf)
          echo "We have PDF: $PDF_FILE"
          
          DOCX_NAME=${{ steps.find_latest.outputs.LATEST_DOC }}
          # Replace .docx with .pdf for the Key
          PDF_TARGET="${DOCX_NAME%.docx}.pdf"

          echo "Re-uploading $PDF_FILE => s3://projectplace-dv-2025-x9a7b/$PDF_TARGET"
          aws s3 cp "$PDF_FILE" "s3://projectplace-dv-2025-x9a7b/$PDF_TARGET" \
            --content-type "application/pdf" \
            --content-disposition "attachment; filename=\"$(basename "$PDF_FILE")\""

          echo "✅ Done! The docx + pdf are in actas/."
