name: Test Email Approval Dispatch

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'Project ID to send approval email for'
        required: true
      override_email:
        description: 'Recipient email to override'
        required: true

jobs:
  dispatch-test-email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID:        ${{ secrets.AWS_ACCOUNT_ID }}    # ‚Üê add this
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Install boto3
        run: python -m pip install boto3

      - name: Lookup latest card & pdf_key
        id: lookup
        run: |
          python3 - << 'PYCODE'
          import os, boto3
          from boto3.dynamodb.conditions import Key

          project_id = os.environ['PROJECT_ID']
          table_name = os.environ['DYNAMODB_ENRICHMENT_TABLE']
          ddb = boto3.resource('dynamodb',
                               region_name=os.environ['AWS_REGION']
                              ).Table(table_name)

          resp = ddb.query(
              KeyConditionExpression=Key('project_id').eq(project_id),
              ScanIndexForward=False,
              Limit=1
          )
          item = resp['Items'][0]
          # export to GitHub Actions outputs
          with open(os.environ['GITHUB_OUTPUT'], 'a') as gh:
              gh.write(f"card_id={item['card_id']}\n")
              gh.write(f"pdf_key={item.get('pdf_key','')}\n")
          PYCODE
        env:
          AWS_REGION:                ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID:            ${{ secrets.AWS_ACCOUNT_ID }}    # ‚Üê add this
          PROJECT_ID:                ${{ github.event.inputs.project_id }}
          DYNAMODB_ENRICHMENT_TABLE: ${{ secrets.DYNAMODB_ENRICHMENT_TABLE }}

      - name: Invoke sendApprovalEmail Lambda
        run: |
          payload=$(jq -c -n \
            --arg pid "${{ github.event.inputs.project_id }}" \
            --arg cid "${{ steps.lookup.outputs.card_id }}" \
            --arg pdf "${{ steps.lookup.outputs.pdf_key }}" \
            --arg rec "${{ github.event.inputs.override_email }}" \
            '{project_id: $pid, card_id: $cid, pdf_key: $pdf, recipient: $rec}')
          echo "üîä Payload ‚Üí $payload"
          aws lambda invoke \
            --function-name sendApprovalEmail \
            --cli-binary-format raw-in-base64-out \
            --payload "$payload" \
            response.json
          cat response.json
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID:        ${{ secrets.AWS_ACCOUNT_ID }}    # ‚Üê add this
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:            ${{ secrets.AWS_REGION }}
