name: test.email.approval.dispatch

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'ProjectPlace project_id'
        required: true
      override_email:
        description: 'Extra recipient e-mail'
        required: true

jobs:
  lookup_and_send:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install boto3
        run: |
          pip install --quiet boto3

      - name: Query DynamoDB & invoke Lambda
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:            ${{ secrets.AWS_REGION }}
          TABLE_NAME:            ${{ secrets.DYNAMODB_ENRICHMENT_TABLE }}
          PID:                   ${{ github.event.inputs.project_id }}
          EMAIL:                 ${{ github.event.inputs.override_email }}
        run: |
          echo "🔎 Looking up project $PID and composing payload for $EMAIL"

          python3 - <<'PY'
          import os, json, boto3
          from boto3.dynamodb.conditions import Key

          region     = os.environ['AWS_REGION']
          table_name = os.environ['TABLE_NAME']
          pid        = os.environ['PID']
          email      = os.environ['EMAIL']

          ddb   = boto3.resource('dynamodb', region_name=region)
          table = ddb.Table(table_name)

          resp  = table.query(KeyConditionExpression=Key('project_id').eq(pid))
          items = resp.get('Items', [])

          card_id = None
          pdf_key = None
          for item in items:
              if item.get('title') == 'Client_Email' and email in (item.get('comments') or []):
                  card_id = item['card_id']
              if not pdf_key and item.get('s3_pdf_path'):
                  pdf_key = item['s3_pdf_path']

          if not card_id or not pdf_key:
              raise SystemExit('❌ card_id or pdf_key not found for the given project/email')

          payload = json.dumps({
              "project_id": pid,
              "card_id":    card_id,
              "recipient":  email,
              "pdf_key":    pdf_key
          })

          print("🟢 Invoking sendApprovalEmail")
          boto3.client('lambda', region_name=region).invoke(
              FunctionName='sendApprovalEmail',
              InvocationType='Event',
              Payload=payload.encode()
          )
          print("✅ Done.")
          PY
